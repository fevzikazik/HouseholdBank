@using HouseholdBank.Models;
@{
    ViewBag.Title = "HGS Yükleme Miktar";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Musteri mus = (Musteri)Session["mus"];
    dbBankEntities db = new dbBankEntities();


    string secilenHesap = ViewBag.secilenHesap;
    int secilenHGSID = (int)ViewBag.secilenHGSID;


    Hesap secilenH = db.Hesap.Where(h => h.hesapEkNo == secilenHesap && mus.tcKimlikNo == h.musTCKN).Single();

    HGS secilenHgs = db.HGS.Where(h => h.hgsID == secilenHGSID).Single();
}

<div class="container" style="background-color:gainsboro;border-radius:15px;padding:3em;max-width:600px">


    <div class="row justify-content-center">
        <div class="col-md-8">
            <br />
            <h2>Seçilen HGS No: @secilenHgs.hgsID <br />Araç Plaka: @secilenHgs.plaka</h2>
            <br />
            <h2>Seçilen Hesap: <br /> @mus.hesapNo - @secilenHesap <br /> Bakiye: <span id="mevcutBakiye">@secilenH.bakiye</span> TL</h2>
            <br />
            <h2>Yükleme Miktarı:</h2>
            @using (Html.BeginForm("BakiyeGuncelle", "HGS", FormMethod.Post))
            {
                @Html.Hidden("secilenHesap", secilenHesap)
                @Html.Hidden("secilenHGSID", secilenHGSID)
                <div class="form-group">
                    <input id="miktarHGS" type="text" name="miktar" required="required" placeholder="Miktar Girin" autocomplete="off" class="form-control">
                </div>
                <button type="submit" id="tamamla" class="btn btn-success">HGS Yükle</button>
                <br />
            }
        </div>
    </div>

</div>



<script>
    $(function () {

        var max = parseFloat($("#mevcutBakiye").text().replace(',', '.')).toFixed(2);
        var virguldenOnce = parseInt($("#mevcutBakiye").text()).toFixed(0);
        var beforeDecimal = virguldenOnce.length;
        var afterDecimal = 2;

        $('#miktarHGS').keydown(function (event) {
            this.value = this.value
                .replace(/[0]*/, '')
                .replace(/[^\d,]/g, '')
                .replace(new RegExp("(^[\\d]{" + beforeDecimal + "})[\\d]", "g"), '$1')
                .replace(/(\,,*)\,/g, '$1')
                .replace(new RegExp("(\\,[\\d]{" + afterDecimal + "}).", "g"), '$1')
                .replace(/(\,\d*)\,/g, '$1');
            max = max.replace('.', ',');
            if ($(this).val().length >= virguldenOnce.length) {
                if ($(this).val() > max) {
                    $(this).val(max);
                }
            }
        });

        $('#miktarHGS').keyup(function (event) {
            this.value = this.value
                .replace(/[,]*/, '')
                .replace(/[0]*/, '')
                .replace(/[^\d,]/g, '')
                .replace(new RegExp("(^[\\d]{" + beforeDecimal + "})[\\d]", "g"), '$1')
                .replace(/(\,,*)\,/g, '$1')
                .replace(new RegExp("(\\,[\\d]{" + afterDecimal + "}).", "g"), '$1')
                .replace(/(\,\d*)\,/g, '$1');
            max = max.replace('.', ',');
            if ($(this).val().length >= virguldenOnce.length) {
                if ($(this).val() > max) {
                    $(this).val(max);
                }
            }
        });
    });

</script>
