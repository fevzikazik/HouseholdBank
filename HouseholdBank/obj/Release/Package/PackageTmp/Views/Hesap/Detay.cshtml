@using HouseholdBank.Models;
@{
    ViewBag.Title = "HesapDetay";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Musteri mus = (Musteri)Session["mus"];
    dbBankEntities db = new dbBankEntities();
    Hesap secilenHesap = (Hesap)ViewBag.hesap;

    DateTime ucAyOnce = DateTime.Now.AddMonths(-3);
    List<Islem> islemler = db.Islem.Where(isl => isl.hesapNo == mus.hesapNo && isl.hesapEkNo == secilenHesap.hesapEkNo && isl.tarih >= ucAyOnce).ToList();
    islemler.Reverse();
}

<div class="container" style="background-color:gainsboro;border-radius:15px;padding:3em;">


    <div class="row justify-content-center">
        <div class="col-md-6" style="max-width:450px;">
            <br />
            <h2>Hesap Detayları:</h2>
            <h3> @mus.hesapNo : @secilenHesap.hesapEkNo</h3>
            <p class="margin-top-s">
                Bakiye : @secilenHesap.bakiye
                <br />
                Açılış Tarihi: @secilenHesap.acilisTarihi.Value.ToString()
                <br />
                Aktiflik Durumu:  @if (@secilenHesap.aktifmi==true) { <label>Aktif</label> }
            </p>
            <p>
                <button class="btn btn-success" data-toggle="modal" data-target="#ParaYatir">Para Yatır</button>
                @if (secilenHesap.bakiye > 0)
                {
                    <button class="btn btn-info" data-toggle="modal" data-target="#ParaCek">Para Çek</button>
                }
                @if (secilenHesap.bakiye == 0)
                {
                    <a href="@Url.Action("HesapKapat","Hesap", new { id = secilenHesap.hesapEkNo})">
                        <button class="btn btn-danger">Hesapı Kapat</button>
                    </a>
                }
                <a href="@Url.Action("Index","Hesap")">
                    <button class="btn btn-primary">Hesaplarıma Geri Dön</button>
                </a>
            </p>

        </div>
        <div class="col-md-6">
            <br />
            <h2>Hesap Hareketleri(Son 3 Ay):</h2>
            <p>
                @if (islemler.Count == 0)
                {
                <p>Bu hesapla ilgili işlem bulunamamıştır.</p>
            }
            else
            {
                <div class="list-group">
                    @foreach (Islem islem in islemler)
                    {
                        <p class="list-group-item list-group-item-action list-group-item-primary">
                            IslemID: @islem.islemID <br /> Tarihi: @islem.tarih <br /> Tipi: @islem.islemTipi <br /> Açıklaması: @islem.aciklama
                        </p>
                        <br />
                    }
                </div>
            }
                </p>
                <br />
            </div>
        </div>

    </div>

    <div class="modal fade" id="ParaYatir" tabindex="-1" role="dialog" aria-labelledby="">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Para Yatır - Mevcut Bakiye: @secilenHesap.bakiye</h4>
                </div>
                @using (Html.BeginForm("ParaYatir", "Hesap", new { @id = secilenHesap.hesapEkNo }, FormMethod.Post))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            <label>Yatırılacak Miktarı Girin(Tek Seferde Maksimum 999.999,99 ₺ Yatırabilirsiniz!):</label>
                            <input type="text" id="miktar" name="miktar" maxlength="9" autocomplete="off" class="form-control" required title="Lütfen miktar girin!" />
                            <label>Açıklama(Maks. 150 karakter):</label>
                            <input type="text" id="aciklama" name="aciklama" maxlength="150" autocomplete="off" class="form-control" required title="Lütfen Açıklama Girin!" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                        <button type="submit" class="btn btn-success">Para Yatır!</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="modal fade" id="ParaCek" tabindex="-1" role="dialog" aria-labelledby="">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Para Çek - Mevcut Bakiye: <span id="mevcutBakiye">@secilenHesap.bakiye</span></h4>
                </div>
                @using (Html.BeginForm("ParaCek", "Hesap", new { @id = secilenHesap.hesapEkNo }, FormMethod.Post))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            <label>Çekilecek Miktarı Girin:</label>
                            <input type="text" id="miktarCek" name="miktarCek" autocomplete="off" class="form-control" required title="Lütfen miktar girin!" />
                            <span id="bakiyeUyari"></span>
                            <label>Açıklama(Maks. 150 karakter):</label>
                            <input type="text" id="aciklama" name="aciklama" maxlength="150" autocomplete="off" class="form-control" required title="Lütfen Açıklama Girin!" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                        <button type="submit" id="paraCekBtn" class="btn btn-success">Para Çek!</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <script>
        $(function () {

            var max = parseFloat($("#mevcutBakiye").text().replace(',', '.')).toFixed(2);
            var virguldenOnce = parseInt($("#mevcutBakiye").text()).toFixed(0);
            var beforeDecimal = virguldenOnce.length;
            var afterDecimal = 2;

            $('#miktarCek').keydown(function (event) {
                this.value = this.value
                    .replace(/[,]*/, '')
                    .replace(/[0]*/, '')
                    .replace(/[^\d,]/g, '')
                    .replace(new RegExp("(^[\\d]{" + beforeDecimal + "})[\\d]", "g"), '$1')
                    .replace(/(\,,*)\,/g, '$1')
                    .replace(new RegExp("(\\,[\\d]{" + afterDecimal + "}).", "g"), '$1')
                    .replace(/(\,\d*)\,/g, '$1');
                max = max.replace('.', ',');
                if ($(this).val().length >= virguldenOnce.length) {
                    if ($(this).val().indexOf(",") == -1) {
                        if ($(this).val() > max) {
                            $(this).val(max);
                        }
                    }
                    else { // virgül varsa
                        if ($(this).val().substr(0, $(this).val().indexOf(',')) == virguldenOnce && $(this).val().substr($(this).val().indexOf(',') + 1, $(this).val().length) > max.substr($(this).val().indexOf(',') + 1, max.length)) {
                            if ($(this).val() > max) {
                                $(this).val(max);
                            }
                        }
                    }
                }
            });

            $('#miktarCek').keyup(function (event) {
                this.value = this.value
                    .replace(/[,]*/, '')
                    .replace(/[0]*/, '')
                    .replace(/[^\d,]/g, '')
                    .replace(new RegExp("(^[\\d]{" + beforeDecimal + "})[\\d]", "g"), '$1')
                    .replace(/(\,,*)\,/g, '$1')
                    .replace(new RegExp("(\\,[\\d]{" + afterDecimal + "}).", "g"), '$1')
                    .replace(/(\,\d*)\,/g, '$1');
                max = max.replace('.', ',');
                if ($(this).val().length >= virguldenOnce.length) {
                    if ($(this).val().indexOf(",") == -1) {
                        if ($(this).val() > max) {
                            $(this).val(max);
                        }
                    }
                    else { // virgül varsa
                        if ($(this).val().substr(0, $(this).val().indexOf(',')) == virguldenOnce && $(this).val().substr($(this).val().indexOf(',') + 1, $(this).val().length) > max.substr($(this).val().indexOf(',') + 1, max.length)) {
                            if ($(this).val() > max) {
                                $(this).val(max);
                            }
                        }
                    }
                }
            });
        });

    </script>
